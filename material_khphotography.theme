<?php

/**
 * @file
 * Functions to support theming in the material_khphotography theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function material_khphotography_preprocess_html(array &$variables) {
    //print_log(material_khphotography_preprocess_html);

    /* Add class to html tag */
    //$variables['html_attributes']->addClass('no-js');
    // Don't display the site name twice on the front page (and potentially others)
    /* if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
      $variables['head_title'] = $variables['head_title_array']['name'];
      } */
}

/**
 * Implements hook_page_attachments_alter().
 */
function material_khphotography_page_attachments_alter(array &$page) {
    // Tell IE to use latest rendering engine (not to use compatibility mode).
    /* $ie_edge = [
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => [
      'http-equiv' => 'X-UA-Compatible',
      'content' => 'IE=edge',
      ],
      ];
      $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge']; */
}

function material_preprocess_taxonomy_vocabulary(array &$variables) {
    //print_log(material_preprocess_taxonomy_term);
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function material_khphotography_preprocess_page(array &$variables) {
    //print_log(material_khphotography_preprocess_page);
    $variables['site_title'] = \Drupal::config('system.site')->get('name');
    $variables['slogan'] = \Drupal::config('system.site')->get('slogan');
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function material_khphotography_theme_suggestions_page_alter(array &$suggestions, array $variables) {
    /* //print_log(material_khphotography_theme_suggestions_page_alter);
      //print_log(\Drupal::routeMatch()->getRouteName());
      if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.photoset' && $tid = \Drupal::routeMatch()->getRawParameter('taxonomy_term')
      ) {
      $term = Term::load($tid);
      $suggestions[] = 'page__taxonomy__' . $term->getVocabularyId();
      } */
}

function material_khphotography_preprocess_search_result(&$variables){
    print_log(array_keys($variables['result']));
    print_log($variables['result']['title']);
    print_log($variables['result']['link']);
    
    $resultNode = $variables['result']['node'];
    print_log($resultNode->getType());
    
    if ($resultNode->getType() === "flickr_photo") { 
        $variables['photo'] = $resultNode;
    }
    
    
    //print_log($resultNode->get('type')->getValue());
    //print_log(json_encode($resultNode));
}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function material_khphotography_theme_suggestions_node_alter(array &$suggestions, array $variables) {
    /* //print_log(material_khphotography_theme_suggestions_node_alter);
      $node = $variables['elements']['#node'];
      //print_log($node->getType());
      if ($variables['elements']['#view_mode'] == "full") {

      } */
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function material_khphotography_preprocess_block(array &$variables) {
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function material_khphotography_theme_suggestions_field_alter(array &$suggestions, array $variables) {
    /* $element = $variables['element'];
      $suggestions[] = 'field__' . $element['#view_mode'];
      $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name']; */
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function material_khphotography_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
    /* $element = $variables['element'];
      if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
      $suggestions[] = 'fieldset__form_composite';
      } */
}

/**
 * Implements hook_preprocess_node().
 */
function material_khphotography_preprocess_node(array &$variables) {
    //print_log(material_khphotography_preprocess_node);
    $node = $variables['elements']['#node'];

    // query to get term from tid
    //$term = \Drupal\taxonomy\Entity\Term::load($node->field_term_id->value);
    if ($node->getType() === 'flickr_album') {
        $photoNodes = \Drupal::entityTypeManager()->getStorage('node')->loadByProperties(['field_tags' => $node->field_term_id->value]);
        $variables['photos'] = $photoNodes;
    } else if ($node->getType() === 'flickr_photo') {
        $variables['photo'] = $node;
        $variables['photographer'] = array_pop(\Drupal::entityTypeManager()->getStorage('node')->loadByProperties(['field_user_id' => $node->field_owner->value]));
    }
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function material_khphotography_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
    
}

/**
 * Implements hook_preprocess_form().
 */
function material_khphotography_preprocess_form(array &$variables) {
    //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function material_khphotography_preprocess_select(array &$variables) {
    //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function material_khphotography_preprocess_field(array &$variables, $hook) {
    /* switch ($variables['element']['#field_name']) {
      } */
}

/**
 * Implements hook_preprocess_details().
 */
function material_khphotography_preprocess_details(array &$variables) {
    /* $variables['attributes']['class'][] = 'details';
      $variables['summary_attributes']['class'] = 'summary'; */
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function material_khphotography_theme_suggestions_details_alter(array &$suggestions, array $variables) {
    
}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function material_khphotography_preprocess_menu_local_task(array &$variables) {
    //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}

function getNodeAlias() {
    $current_path = \Drupal::service('path.current')->getPath();
    $result = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);
    return $result;
}

function preprocess_allphotosets(&$variables) {
    if (getNodeAlias() === '/all-photo-sets') {
        $variables['test'] = "test";
        $contentToDisplay = json_decode($variables['node']->body->value);
        //print_log($contentToDisplay);
        $photosets = array();

        // example: {"vid":"photosets","tid":[]}  {"vid":"photoset","tid":["1053","1015"]}
        ////print_log(json_encode(array('vid' => 'photoset', 'tid' => array('1053', '1015'))));
        if (isset($contentToDisplay->tid)) {

            // display the term 
            foreach ($contentToDisplay->tid as $tid) {

                $nodePhotoset = \Drupal::entityQuery('node')
                        ->condition('type', 'flickr_album')
                        ->condition('nid', $tid)
                        ->execute();

                foreach ($nodePhotoset as $npsid) {

                    // load each node flick_album
                    $nps = \Drupal::entityTypeManager()->getStorage('node')->load($npsid);

                    // load nodes- flick_photo
                    $npids = \Drupal::entityQuery('node')
                            ->condition('type', 'flickr_photo')
                            ->condition('field_photo_id', $nps->field_photo_id->value)
                            ->execute();

                    foreach ($npids as $nid => $value) {
                        $np = \Drupal::entityTypeManager()->getStorage('node')->load($value);
                        $featured_photo = $np->field_photo_thumb_url->value;
                    }
                    $photoset = array();
                    $photoset['tid'] = $nps->id();
                    $photoset['name'] = $nps->title->value;
                    $photoset['feature_img'] = $featured_photo;
                    $photosets[$tid] = $photoset;
                }
            }
        } else {
            if (isset($contentToDisplay->vid)) {
                // display all of terms in vocabulary
                $vocabulary = \Drupal\flickr\Classes\Utils::createVocabulary("photosets", "Photo Sets", "Album");
                $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vocabulary, 0, NULL, TRUE);


                foreach ($terms as $term) {
                    // get primary photo for each photoset
                    // query flickr album
                    $nodePhotosetIDs = \Drupal::entityQuery('node')
                            ->condition('type', 'flickr_album')
                            ->condition('field_term_id', $term->id())
                            ->execute();

                    $photosetID = -1;
                    foreach ($nodePhotosetIDs as $npsid) {
                        $photosetID = $npsid;
                        // load each node flick_album
                        $nps = \Drupal::entityTypeManager()->getStorage('node')->load($npsid);

                        // load nodes- flick_photo
                        $npids = \Drupal::entityQuery('node')
                                ->condition('type', 'flickr_photo')
                                ->condition('field_photo_id', $nps->field_photo_id->value)
                                ->execute();

                        foreach ($npids as $nid => $value) {
                            $np = \Drupal::entityTypeManager()->getStorage('node')->load($value);
                            $featured_photo = $np->field_photo_thumb_url->value;
                        }
                    }

                    // get node based on term id 
                    //$nodes = \Drupal::entityTypeManager()->getStorage('node')->loadByProperties(['field_tags' => $term->id()]);
                    //$node = array_pop($nodes);

                    $photoset = array();
                    $photoset['tid'] = $photosetID;
                    $photoset['name'] = $term->getName();
                    $photoset['feature_img'] = $featured_photo;
                    $photosets[$term->id()] = $photoset;
                }
            }
        }
        $variables['photosets'] = $photosets;
    }
}

/**
 * Preprocess
 */
function preprocessess_photosream(&$variables) {
    if (\Drupal::service('path.matcher')->isFrontPage()) {

        $index = isset($_GET['page']) ? $_GET['page'] : 1;

        $total = count(\Drupal::entityQuery('node')
                        ->condition('type', 'flickr_photo')->execute());
        $nids = \Drupal::entityQuery('node')
                ->condition('type', 'flickr_photo')
                ->pager('100')
                ->execute();
        $photos = array();
        $count = 1;
        foreach ($nids as $nid) {
            $photo = \Drupal::entityTypeManager()->getStorage('node')->load($nid);
            $photos[$nid] = $photo;
            $count++;
        }
        $variables['photos'] = $photos;
        $variables['index'] = $index;
        $variables['count'] = $total / 100;
        $variables['currentURL'] = getNodeAlias();
        $variables['site_title'] = \Drupal::config('system.site')->get('name');
        $variables['slogan'] = \Drupal::config('system.site')->get('slogan');
    }
}
