<?php

/**
 * @file
 * Functions to support theming in the material_khphotography theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function material_khphotography_preprocess_html(array &$variables) {
    /* Add class to html tag */
    //$variables['html_attributes']->addClass('no-js');
    // Don't display the site name twice on the front page (and potentially others)
    /* if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
      $variables['head_title'] = $variables['head_title_array']['name'];
      } */
}

/**
 * Implements hook_page_attachments_alter().
 */
function material_khphotography_page_attachments_alter(array &$page) {
    // Tell IE to use latest rendering engine (not to use compatibility mode).
    /* $ie_edge = [
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => [
      'http-equiv' => 'X-UA-Compatible',
      'content' => 'IE=edge',
      ],
      ];
      $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge']; */
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function material_khphotography_preprocess_page(array &$variables) {
    print_log("material_khphotography_preprocess_page");

    if (\Drupal::service('path.matcher')->isFrontPage()) {
        $variables['test'] = "test";
        $contentToDisplay = json_decode($variables['node']->body->value);
        $photosets = array();

        if (isset($contentToDisplay->tid)) {
            // display the term 
        } else {
            if (isset($contentToDisplay->vid)) {
                // display all of terms in vocabulary
                $vocabulary = \Drupal\flickr\Classes\Utils::createVocabulary("photosets", "Photo Sets", "Album");
                $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vocabulary, 0, NULL, TRUE);


                foreach ($terms as $term) {

                    $nodes = \Drupal::entityTypeManager()->getStorage('node')->loadByProperties(['field_tags' => $term->id()]);
                    $node = array_pop($nodes);
                    $photoset = array();
                    $photoset['tid'] = $term->id();
                    $photoset['name'] = $term->getName();
                    $photoset['feature_img'] = $node->field_photo_thumb_url->value;
                    //print_log($nodes[0]);
                    $photosets[$term->id()] = $photoset;
                }
            }
            $variables['photosets'] = $photosets;
        }
    }

    /**
     * Implements hook_theme_suggestions_page_alter().
     */
    function material_khphotography_theme_suggestions_page_alter(array &$suggestions, array $variables) {
        
    }

    /**
     * Implements hook_theme_suggestions_node_alter().
     */
    function material_khphotography_theme_suggestions_node_alter(array &$suggestions, array $variables) {
        /* $node = $variables['elements']['#node'];

          if ($variables['elements']['#view_mode'] == "full") {

          } */
    }

    /**
     * Implements hook_preprocess_HOOK() for Block document templates.
     */
    function material_khphotography_preprocess_block(array &$variables) {
        
    }

    /**
     * Implements hook_theme_suggestions_field_alter().
     */
    function material_khphotography_theme_suggestions_field_alter(array &$suggestions, array $variables) {
        /* $element = $variables['element'];
          $suggestions[] = 'field__' . $element['#view_mode'];
          $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name']; */
    }

    /**
     * Implements hook_theme_suggestions_field_alter().
     */
    function material_khphotography_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
        /* $element = $variables['element'];
          if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
          $suggestions[] = 'fieldset__form_composite';
          } */
    }

    /**
     * Implements hook_preprocess_node().
     */
    function material_khphotography_preprocess_node(array &$variables) {
        // Default to turning off byline/submitted.
        //$variables['display_submitted'] = FALSE;
    }

    /**
     * Implements hook_theme_suggestions_views_view_alter().
     */
    function material_khphotography_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
        
    }

    /**
     * Implements hook_preprocess_form().
     */
    function material_khphotography_preprocess_form(array &$variables) {
        //$variables['attributes']['novalidate'] = 'novalidate';
    }

    /**
     * Implements hook_preprocess_select().
     */
    function material_khphotography_preprocess_select(array &$variables) {
        //$variables['attributes']['class'][] = 'select-chosen';
    }

    /**
     * Implements hook_preprocess_field().
     */
    function material_khphotography_preprocess_field(array &$variables, $hook) {
        /* switch ($variables['element']['#field_name']) {
          } */
    }

    /**
     * Implements hook_preprocess_details().
     */
    function material_khphotography_preprocess_details(array &$variables) {
        /* $variables['attributes']['class'][] = 'details';
          $variables['summary_attributes']['class'] = 'summary'; */
    }

    /**
     * Implements hook_theme_suggestions_details_alter().
     */
    function material_khphotography_theme_suggestions_details_alter(array &$suggestions, array $variables) {
        
    }

    /**
     * Implements hook_preprocess_menu_local_task().
     */
    function material_khphotography_preprocess_menu_local_task(array &$variables) {
        //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
    }

}
